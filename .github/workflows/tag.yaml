name: Bump version
on:
  push:
    branches:
      - main
jobs:
  tag:
    name: bump tags
    outputs:
      part: ${{ steps.bump_tag.outputs.part }}
      tag: ${{ steps.bump_tag.outputs.tag }}
      new_tag: ${{ steps.bump_tag.outputs.new_tag }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Bump version and push tag
      id: bump_tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch

  build_image:
    needs: tag
    if: needs.tag.outputs.part != ''
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
    - name: Check part
      run: |
        if [ -z ${{ needs.tag.outputs.part }} ]; then
          echo "No new tag, exiting"
          exit 0
        fi
    - uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=ghcr.io/${{ github.repository }}
        VERSION=edge
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [[ $BRANCH == main ]]; then
            VERSION=latest
          elif [[ $BRANCH == devel ]]; then
            VERSION=stage
          fi
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
    - run: echo ${{ steps.prep.outputs.version }}
  # push_to_registry:
  #   needs: tag
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - name: Check new tag
  #       run: |
  #         if [ -z ${{ needs.tag.outputs.part }} ]; then
  #           echo "No new tag, exiting"
  #           exit 0
  #         fi
  #     - name: Check out the repo
  #       uses: actions/checkout@v2

  #     - name: Log in to the Github Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: ghcr.io/${{ github.repository }}
      
  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${GITHUB_REF#refs/tags/}
  #         labels: |
  #           org.opencontainers.image.source=${{ github.event.repository.clone_url }}
  #           org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
  #           org.opencontainers.image.revision=${{ github.sha }}
